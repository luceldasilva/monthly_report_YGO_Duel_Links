```{python}
from queries_db.constants import comunity_dict, tables_db, comunidades
from queries_db import dataframe_queries as dfq
from queries_db.transform_df_queries import pivot_comunity
import visualization
from visualization.venn_comunities import venn_graphs
from visualization.comparison_two_months import indicator
from visualization.pie_diagram import percentage_deck_popularity
import pyprojroot
import numpy as np
import pandas as pd
import seaborn as sns
import locale


fact_table: str = tables_db[-1]
alias_fact_table: str = fact_table[-3:]
kc_cup_bool: bool = False
tournament_text: str = 'DLv. MAX' if kc_cup_bool else 'KOG'
```

```{python}
decks_sum = dfq.decks_df(fact_table, alias_fact_table)
decks_sum
```

```{python}
kog_df = dfq.df_query(fact_table, alias_fact_table)
```

```{python}
"""
Para las fechas y poner el mes y a√±o correspondiente
"""


locale.setlocale(locale.LC_TIME, 'Spanish_Spain.1252')
#'es_ES.utf8'  En Linux/Mac

date_fact_table = kog_df.ndmax[0]

month_fact_table = date_fact_table.strftime('%B').capitalize()
year_fact_table = date_fact_table.strftime('%Y')
```

```{python}
kog_previous_df = dfq.df_query(
    fact_table=tables_db[-2],
    alias_fact_table=tables_db[-2][-3:]
)
kog_previous_df
```

```{python}
pivot_comunidad = pivot_comunity(kog_df)
pivot_comunidad
```

```{python}
visualization.comunity_bars(pivot_comunidad)
```

```{python}
venn_graphs(kog_df, pivot_comunidad)
```

```{python}
date_df = dfq.date_df(fact_table, alias_fact_table, date_fact_table)
date_df
```

```{python}
visualization.date_lineplot(
    date_df, month_fact_table, year_fact_table, tournament_text
)
```

```{python}
limit_top: int = 5
percentage_deck_popularity(decks_sum=decks_sum, limit=limit_top)
```

```{python}
visualization.squarify_decks(
    decks_sum, tournament_text, month_fact_table, year_fact_table
)
```

```{python}
visualization.top_five_decks(
    False, decks_sum, limit_top,
    tournament_text, month_fact_table, year_fact_table
)
```

```{python}
visualization.wordcloud(kog_df, decks_sum, limit_top)
```

```{python}
indicator(kog_df, decks_sum, kog_previous_df)
```

```{python}
print('Hola')
```