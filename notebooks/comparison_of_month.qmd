```{python}
"""
Usarlo en mes que hay KC para comparar
"""
from queries_db.constants import comunity_dict, tables_db, comunidades
from queries_db import dataframe_queries as dfq
from visualization import save_plot
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from matplotlib_venn import venn2
import locale


fact_table: str = tables_db[-1]
alias_fact_table: str = fact_table[-3:]
kc_cup_bool: bool = False
tournament_text: str = 'DLv. MAX' if kc_cup_bool else 'KOG'

kog_df = dfq.df_query(fact_table, alias_fact_table)

locale.setlocale(locale.LC_TIME, 'Spanish_Spain.1252')

date_fact_table = kog_df.ndmax[0]

month_fact_table = date_fact_table.strftime('%B').capitalize()
year_fact_table = date_fact_table.strftime('%Y')

kc_fact_table: str = 'kc_cup_2025_feb'
kc_alias_fact_table: str = kc_fact_table[-3:]
kc_cup_bool: bool = True
kc_df = dfq.df_query(kc_fact_table, kc_alias_fact_table)

kc_users = kc_df.nick.drop_duplicates()
kog_users = kog_df.nick.drop_duplicates()
```

```{python}
kc_users = set(kc_df.nick.drop_duplicates())
kog_users = set(kog_df.nick.drop_duplicates())

solo_kc = len(kc_users - kog_users)
solo_kog = len(kog_users - kc_users)
interseccion = len(kc_users & kog_users)

plt.figure(figsize=(5,5))
venn2(
    subsets=(
        solo_kc, solo_kog, interseccion
    ),
    set_labels=(
        'LLegaron a DLv. MAX',
        'Llegaron a KOG'
    )
)
plt.title(
    f"Diagrama de Venn de Usuarios\nen {month_fact_table} {year_fact_table}",
    fontsize=14,
    fontweight='bold'
)
save_plot()
plt.show()
```

